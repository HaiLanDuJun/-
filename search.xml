<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>c易错合集</title>
    <url>/2022/02/20/c%E6%98%93%E9%94%99%E5%90%88%E9%9B%86/</url>
    <content><![CDATA[<p>本页将作为上机实践时遇到的易错或需注意的小细节的集合。<br>1.scanf函数中括号后注意空格的影响。如scanf(“%d “,&amp;i);此时会发现键盘只输入一个字符无法结束程序，需输入两个。<br>2.int、char、float 等类型的变量用于 scanf() 时都要在前面添加&amp;，而数组或者字符串用于 scanf() 时不用添加&amp;，它们本身就会转换为地址。</p>
]]></content>
      <tags>
        <tag>c语言</tag>
        <tag>易错点</tag>
        <tag>注意点</tag>
      </tags>
  </entry>
  <entry>
    <title>关于数组</title>
    <url>/2022/02/22/%E5%85%B3%E4%BA%8E%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<p>变量的值在编译期间并不能确定，只有等到程序运行后，根据计算结果才能知道它的值到底是什么，所以数组长度中一旦包含了变量，那么数组长度在编译期间就不能确定了，也就不能为数组分配内存了，只有等到程序运行后，得到了变量的值，确定了具体的长度，才能给数组分配内存，我们将这样的数组称为变长数组(VLA, Variable LengthArray)。<br>普通数组（固定长度的数组）是在编译期间分配内存的，而变长数组是在运行期间分配内存的。<br>注意变长数组：从你定义数组的那一刻起（也就是第二行代码），数组的长度就确定下来了，以后再也不会改变了；改变 n 的值<br>并不会影响数组长度，它们之间没有任何“联动”关系。用 scanf() 读入 n 的值，影响的也仅仅是 n 本身，不会影响数组。<br>“\0”为’空字符‘，其在C语言中唯一作用是作为字符串结束标志。<br>数组中由” “包围的字符串会自动在末尾添加’\0’。数组“123456”长度为7，后面添加了“\0”需要注意的是，逐个字符地给数组赋值并不会自动添加’\0’，例如：char str[] = {‘a’, ‘b’, ‘c’};长度为3.<br>当用字符数组存储字符串时，要特别注意’\0’，要为’\0’留个位置；这意味着，字符数组的长度至少要比字符串的长<br>度大 1。<br>在函数内部定义的变量、数组、结构体、共用体等都称为局部数据。在很多编译器下，局部数据的初始值都是随机的、无意义的，而不是我们通常认为的“零”值。这一点非常重要，大家一定要谨记，否则后面会遇到很多奇葩的错误。<br>在函数内部定义数组，可先初始化数组元素。如char str[20]={0};<br>所谓字符串长度，就是字符串包含了多少个字符（不包括最后的结束符’\0’）。例如”abc”的长度是 3，而不是 4。<br>在 C 语言中，我们使用 string.h 头文件中的 strlen() 函数来求字符串的长度，它的用法为：length strlen(strname);<br>strname 是字符串的名字，或者字符数组的名字；length 是使用 strlen() 后得到的字符串长度，是一个整数。<br>如 long len=strlen(strname);//此处用len来储存字符串长度<br>字符串连接函数为strcat(arrayname1,arrayname2);将字符串2连接到字符串1后，去掉1的空字符。<br>字符串复制函数为strcpy(arrayname1,arrayname2);将字符串2中的内容复制到字符串1中去（包括空字符），覆盖1的内容。注意：字符串1的长度要大于2的长度。<br>字符串比较函数strcmp(arrayname1,arrayname2);字符本身没有大小之分，strcmp() 以各个字符对应的 ASCII 码值进行比较。strcmp() 从两个字符串的第 0 个字符开始比较，如果它们相等，就继续比较下一个字符，直到遇见不同的字符，或者到字符串的末尾。返回值：若 arrayName1 和 arrayName2 相同，则返回 0；若 arrayName1 大于 arrayName2，则返回大于 0 的值；若 arrayName1 小于 arrayName2，则返回小于 0 的值。<br>字符串的输入与输出：<br>输出：puts()：输出字符串并自动换行，该函数只能输出字符串。printf()：通过格式控制符%s 输出字符串，不能自动换行。除了字符串，printf() 还能输出其他类型的数据<br> ！注意  ！输出字符串时只需要给出名字，不能带后边的[ ]<br>输入：scanf()：通过格式控制符%s 输入字符串。除了字符串，scanf() 还能输入其他类型的数据。scanf() 读取字符串时以空格为分隔，遇到空格就认为当前字符串结束了，所以无法读取含有空格的字符串。<br>gets()：直接输入字符串，并且只能输入字符串。gets() 认为空格也是字符串的一部分，只有遇到回车键时才认为字符串输入结束，所以，不管输入了多少个空格，只要不按下回车键，对 gets() 来说就是一个完整的字符串。换句话说，gets() 用来读取一整行字符串。<br>！ 注意  ！scanf() 在读取数据时需要的是数据的地址，这一点是恒定不变的，所以对于 int、char、float 等类型的变量都要在前边添加&amp;以获取它们的地址。但是字符串名字或者数组名字在使用的过程中一般都会转换为地址，所以再添加&amp;就是多此一举，甚至会导致错误了。所以使用scanf输入字符串时后字符串名称不用加&amp;</p>
]]></content>
      <tags>
        <tag>c语言</tag>
        <tag>数组</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>关于运算符</title>
    <url>/2022/02/18/%E5%85%B3%E4%BA%8E%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<p>关系运算符都是双目运算符，结合性为左结合。<br>含两个操作数为双目，单个为单目。唯一的三目运算符为条件运算符( ? : )<br>条件运算符结合方向为自右向左<br>    逻辑运算符<br>    &amp;&amp;。||。！<br>优先级：<br>非(!)&gt;算术&gt;关系&gt;&amp;&amp;和||&gt;条件运算符(?:)&gt;赋值(=)</p>
<p>关键字break;可用于跳出switch语句，遇到break;不再执行switch中任何语句，在循环中使用结束本次循环</p>
]]></content>
      <tags>
        <tag>c语言</tag>
        <tag>运算符</tag>
      </tags>
  </entry>
  <entry>
    <title>娱乐至死</title>
    <url>/2022/01/20/%E5%A8%B1%E4%B9%90%E8%87%B4%E6%AD%BB/</url>
    <content><![CDATA[<p>娱乐至死的可怕之处不在于娱乐本身，而在于人们日渐失去对社会事务进行严肃思考和理智判断的能力，在于被轻佻的文化环境养成了既无知且无畏的理性文盲而不自知。<br>—— 尼尔・波兹曼 《娱乐至死》</p>
]]></content>
      <tags>
        <tag>摘录</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机是怎样运行的——二进制</title>
    <url>/2022/01/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84%E2%80%94%E2%80%94%E4%BA%8C%E8%BF%9B%E5%88%B6/</url>
    <content><![CDATA[<p>本文为笔者学习计算机组成原理的笔记。<br>二进制数：组成二进制数的每个符号都称之为该数的一个二进制位，简称位。如1010（代表十进制数10）它由4个符号组成，我们就说这个数由4个二进制位组成，所以1010是4位二进制数。<br>二进制数也称为比特（bit）<br>十进制的公式为下图<br><img src="/images/%E8%BF%9B%E5%88%B6%E5%85%AC%E5%BC%8F.jpg" alt="alt"><br>如图：其中的ki指的是第i位的符号，它可以是0~9这10个符号中的任意一个，ki也被称为第i位的系数，10i被称为第i位的权重，D表示这n位符号的组合代表的数量。n个符号的组合也被称为数字。这里我们将权重10改为2，我们就得到了二进制公式<br>二进制中0在语言编程中表示false          1表示true</p>
<p>各进制间转换：<br>二进制转十进制：除2取余，逆序排列<br>二进制转八进制：假设一个n位二进制数Xn-1<em>Xn-2…….X1</em>X0<br>其中X代表0或1，当n位3的倍数可写为下图形式<br><img src="/images/%E8%BF%9B%E5%88%B6.png" alt="alt"><br>这里我们把2的零次方用8的零次方替换，2的三次方用8的一次方替换，以此类推变为下图形式<br><img src="/images/%E8%BF%9B%E5%88%B62.png" alt="alt"><br>很显然，二进制数字按照从右往左的顺序每3个二进制位为一组，每一组可转化为一个八进制位。<br>同理可得，二进制数字按照从右往左的顺序每4个二进制位为一组，每一组可转化为一个十六进制位。</p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>二进制</tag>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>随笔</title>
    <url>/2022/02/14/%E9%9A%8F%E7%AC%94/</url>
    <content><![CDATA[<p>别太在意别人的看法，他们只是为了满足自己的需求。别人对你产生了某些看法，是因为你被对方划进了自己的经验世界里。对方希望按照自己的想法改造自己经验世界里的事物包括人，目的是为了满足自我需求。没有人希望身边出现一个不顺眼的事物，或者一个天天跟自己作对的人。为了让自己生活的空间变得“和谐”，个体会极尽所能改变别人。如果你发现某个人总是对你有很多看法，这意味着你的某些想法或者行为严重影响到了他。无论他对你的看法看上去多么为你好，你都不要太放在心上，实际上他只是为了满足自己需求。是因为他的认知中产生了某种矛盾<br>由于你的出现，造成了他在认知上产生了某些矛盾。原本你没有出现的时候，他的思想、信念、认知、情绪、对世界的看法、对生活的目的都是完整而统一的。可是你的出现，让他意识到原来还有人跟自己的想法不一样，原来还有对事物的另外一种解释。他一时间接受不了，在认知上产生了矛盾。为了消除这种矛盾，对方会尽可能让你意识到是自己的错误，他们不会改变自己的错误，只能来改变你。也就是说，别人并不一定是真心为你好，但是一定是真心为了自己好。</p>
]]></content>
      <tags>
        <tag>人际交往</tag>
      </tags>
  </entry>
</search>
